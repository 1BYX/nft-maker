import React, { useState } from 'react'
import JSZip from 'jszip'
import { saveAs } from 'file-saver'

const ZipTest = () => {
  let [image, setImage] = useState('')
  const url =
    ''
  const downloadFile = () => {
    let zip = new JSZip()

    let unformattedLayers = localStorage.getItem('layers')
    if (unformattedLayers) {
      const layers = JSON.parse(unformattedLayers)
      const unformattedUrl = layers[3].attributes[0].image
      const b64urlSplit = unformattedUrl.split(',')
      const b64url = b64urlSplit[1]

      zip.file('hello.txt', 'hello world\n')
      zip.file('bye.txt', 'bye you\n')
      let imgs = zip.folder('images')
      imgs?.file('image1.png', b64url, {
        base64: true,
      })

      zip.generateAsync({ type: 'blob' }).then((content) => {
        saveAs(content, 'example.zip')
      })
    }
  }

  return (
    <div className='w-max'>
      <button className='w-24 h-16 bg-accent7' onClick={downloadFile}>
        download
      </button>
    </div>
  )
}

export default ZipTest
